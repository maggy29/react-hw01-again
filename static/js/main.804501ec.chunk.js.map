{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendListItem/FriendListItem.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","img/default.jpg","components/Painting/Painting.js","components/PaintingList/PaintingList.js","components/Section/Section.js","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Painting","imageUrl","defaultImage","title","profileUrl","author","price","fewLeft","quantity","src","alt","width","href","type","PaintingList","items","map","item","url","tag","id","Section","children","Profile","name","location","avatar","stats","className","styles","profile","description","statItem","label","followers","views","likes","randomColor","Math","floor","random","Statistics","statistics","statList","stat","style","backgroundColor","percentage","FriendListItem","status","isOnline","statusClasses","online","offline","join","FriendList","friends","friendList","friend","TransactionHistory","table","thead","tr","amount","currency","td","App","paintings","user","statData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.804501ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2sDhX\",\"description\":\"Profile_description__3SEJx\",\"avatar\":\"Profile_avatar__Fx4lA\",\"name\":\"Profile_name__2VWUm\",\"tag\":\"Profile_tag__3Xzn0\",\"location\":\"Profile_location__S9QcN\",\"stats\":\"Profile_stats__v4lVC\",\"statItem\":\"Profile_statItem__1vQo3\",\"label\":\"Profile_label__2S0RN\",\"quantity\":\"Profile_quantity__lUzC8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__2ah-p\",\"thead\":\"TransactionHistory_thead__ceGjW\",\"tr\":\"TransactionHistory_tr__26OBK\",\"td\":\"TransactionHistory_td__1TiZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendListItem_status__2vhW-\",\"online\":\"FriendListItem_online__3hfJw\",\"offline\":\"FriendListItem_offline__1DIjC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1Fz_n\",\"title\":\"Statistics_title__19oG2\",\"statList\":\"Statistics_statList__1X-Zy\",\"item\":\"Statistics_item__1h6fh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3JkBp\",\"item\":\"FriendList_item__3zKEe\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import PropTypes from 'prop-types';\r\nimport defaultImage from '../../img/default.jpg';\r\n\r\nconst styles = {                     // just one obj, it not recreates at each rerender\r\n  container: {\r\n        outline: '2px solid #991111',\r\n  }\r\n}\r\n\r\nconst Painting = ({\r\n  imageUrl = defaultImage,\r\n  title,\r\n  profileUrl,\r\n  author = 'не известно',\r\n  price,\r\n  quantity,\r\n}) => {\r\n  const fewLeft = quantity < 10\r\n  return (\r\n    <div\r\n    // style = {styles.container}\r\n    >\r\n      <img src={imageUrl} alt={title} width=\"480\" />\r\n      <h2>{title}</h2>\r\n      <p>\r\n        Автор: <a href={profileUrl}>{author}</a>\r\n      </p>\r\n      <p>Цена: {price} кредитов</p>\r\n      <p\r\n      //style={{color: fewLeft ? \"red\" : \"green\"}}\r\n      >\r\n        Доступность: {fewLeft ? 'заканчивается' : 'есть в наличии'}\r\n      </p>\r\n      <button type=\"button\">Добавить в корзину</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nPainting.propTypes = {\r\n  imageUrl: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  profileUrl: PropTypes.string.isRequired,\r\n  author: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  quantity: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Painting;","import Painting from '../Painting/Painting';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PaintingList({ items }) {\r\n  return (\r\n    <ul>\r\n      {items.map(item => (\r\n        <li key={item.id}>\r\n          <Painting\r\n            imageUrl={item.url}\r\n            title={item.title}\r\n            author={item.author.tag}\r\n            profileUrl={item.author.url}\r\n            price={item.price}\r\n            quantity={item.quantity}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nPaintingList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default PaintingList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport defaultImage from '../../img/default.jpg'\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({name, tag, location, avatar=defaultImage, stats})=>{\r\n    return(\r\n    <div className={styles.profile}>\r\n  <div className={styles.description}>\r\n    <img\r\n      src={avatar}\r\n      alt=\"Аватар пользователя\"\r\n      className={styles.avatar}\r\n    />\r\n    <p className={styles.name}>{name}</p>\r\n    <p className={styles.tag}>{tag}</p>\r\n    <p className={styles.location}>{location}</p>\r\n  </div>\r\n\r\n  <ul className={styles.stats}>\r\n    <li className={styles.statItem}>\r\n      <span className={styles.label}>Followers</span>\r\n      <span className={styles.quantity}>{stats.followers}</span>\r\n    </li>\r\n    <li className={styles.statItem}>\r\n      <span className={styles.label}>Views</span>\r\n      <span className={styles.quantity}>{stats.views}</span>\r\n    </li>\r\n    <li className={styles.statItem}>\r\n      <span className={styles.label}>Likes</span>\r\n      <span className={styles.quantity}>{stats.likes}</span>\r\n    </li>\r\n  </ul>\r\n</div>)\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.object,\r\n}\r\n\r\nexport default Profile;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from './Statistics.module.css'\r\n\r\nconst randomColor = () => Math.floor(Math.random() * 256);\r\nconst randomRGB = () =>\r\n  `rgb(${randomColor()},${randomColor()},${randomColor()})`;\r\n   \r\nconst Statistics = ({title, stats}) => {\r\n    return(\r\n        <section className={styles.statistics}>\r\n  {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n  <ul className={styles.statList}>\r\n      {stats.map(stat=> (<li key={stat.id} className={styles.item}  style={{ backgroundColor: `${randomRGB()}` }}>\r\n      <span className=\"label\">{stat.label}</span>\r\n      <span className=\"percentage\">{stat.percentage}</span>\r\n    </li>))}\r\n    \r\n  </ul>\r\n</section>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape ({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  )\r\n}\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport defaultImage from '../../img/default.jpg';\r\nimport styles from './FriendListItem.module.css';\r\nconst statusClasses = [\r\nstyles.status,\r\n\r\n]\r\n\r\nconst FriendListItem = ({isOnline=false, name, avatar= defaultImage}) => {\r\n  const statusClasses = [\r\n    styles.status,\r\n    isOnline ? styles.online : styles.offline,\r\n    ];\r\n\r\n  return (\r\n      <>\r\n      <span className={statusClasses.join(' ')}>{isOnline}</span>\r\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n      </>\r\n  )\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    isOnline: PropTypes.bool,\r\n    name: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n}\r\n\r\nexport default FriendListItem;","import PropTypes from 'prop-types';\r\nimport FriendListItem from '../FriendListItem/FriendListItem';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendList = ({friends}) => {\r\n  return(\r\n    <ul className={styles.friendList}>\r\n      {friends.map(friend=> {\r\n        return(\r\n          <li key={friend.id} className={styles.item}>\r\n            <FriendListItem \r\n              isOnline={friend.isOnline}\r\n              avatar={friend.avatar}\r\n              name={friend.name}\r\n            />\r\n          </li>\r\n        )\r\n       })}\r\n    </ul>\r\n  )\r\n};\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n        })\r\n    )}\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({items}) =>{\r\n    return(\r\n        <table className={styles.table}>\r\n  <thead className={styles.thead}>\r\n    <tr className={styles.tr}>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </thead>\r\n\r\n  <tbody>\r\n      {items.map(({id, type, amount, currency}) => (\r\n        <tr className={styles.tr} key={id}>\r\n      <td className={styles.td}>{type}</td>\r\n      <td className={styles.td}>{amount}</td>\r\n      <td className={styles.td}>{currency}</td>\r\n    </tr>\r\n      ))}\r\n    \r\n    \r\n  </tbody>\r\n</table>\r\n    )\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,           \r\n        })\r\n    )\r\n}\r\n\r\nexport default TransactionHistory;","import PaintingList from './components/PaintingList';\r\nimport Section from './components/Section/Section';\r\nimport Profile from './components/Profile/Profile';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport FriendList from './components/FriendList/FriendList';\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\r\nimport paintings from './paintings.json';\r\nimport user from './user.json';\r\nimport statData from './statData.json';\r\nimport friends from './friends.json';\r\nimport transactions from './transactions.json';\r\n\r\nexport default function App() {\r\n  \r\n  return (\r\n    <div>\r\n      \r\n      <Section title=\"Топ недели\">\r\n        <PaintingList items={paintings} />\r\n      </Section>\r\n\r\n      <Section title=\"Лучшее\"></Section>\r\n\r\n      <Profile \r\n      name={user.name} \r\n      tag={user.tag} \r\n      location={user.location} \r\n      avatar={user.avatar} \r\n      stats={user.stats}\r\n      />\r\n      \r\n      <Statistics title=\"Upload stats\" stats={statData} />\r\n      <Statistics stats={statData} />\r\n      \r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}